# (c): Mallow's Cp statistic
best_cp_model <- which.min(subset_summary$cp)
# (d), (e), (f): Forward selection, Backward elimination, and Stepwise selection
null_model <- lm(y ~ 1, data=data)
# Forward Selection
forward_model <- step(null_model, direction="forward", scope=formula(full_model), trace=FALSE)
# Backward Elimination
backward_model <- step(full_model, direction="backward", trace=FALSE)
# Stepwise Selection
stepwise_model <- step(null_model, direction="both", scope=formula(full_model), trace=FALSE)
# Step (ii): Compute PRESS, AIC, and BIC for selected subset models
# Define function for PRESS statistic
PRESS <- function(model) {
pr <- residuals(model)/(1 - lm.influence(model)$hat)
sum(pr^2)
}
# Extract the best models
best_r2_formula <- as.formula(paste("y ~", paste(names(coef(subset_models, best_r2_model))[-1], collapse=" + ")))
best_adj_r2_formula <- as.formula(paste("y ~", paste(names(coef(subset_models, best_adj_r2_model))[-1], collapse=" + ")))
best_cp_formula <- as.formula(paste("y ~", paste(names(coef(subset_models, best_cp_model))[-1], collapse=" + ")))
# Fit the selected models
model_r2 <- lm(best_r2_formula, data=data)
model_adj_r2 <- lm(best_adj_r2_formula, data=data)
model_cp <- lm(best_cp_formula, data=data)
# PRESS statistic
press_r2 <- PRESS(model_r2)
press_adj_r2 <- PRESS(model_adj_r2)
press_cp <- PRESS(model_cp)
# AIC and BIC for the models
aic_r2 <- AIC(model_r2)
bic_r2 <- BIC(model_r2)
aic_adj_r2 <- AIC(model_adj_r2)
bic_adj_r2 <- BIC(model_adj_r2)
aic_cp <- AIC(model_cp)
bic_cp <- BIC(model_cp)
# Output the results
cat("Model based on R-squared:\n")
cat("Formula:", best_r2_formula, "\n")
# Load necessary libraries
library(MASS)      # For stepwise selection
library(leaps)     # For subset selection
library(car)       # For PRESS statistic calculation
library(stats)     # For AIC and BIC calculation
# Hald Cement Data (Replace this with your actual dataset if needed)
data <- cement
# Full model with all predictors
full_model <- lm(y ~ x1 + x2 + x3 + x4, data=data)
# Step (i): Subset Models Selection Based on Different Criteria
# (a) & (b): R-squared and Adjusted R-squared based models using regsubsets
subset_models <- regsubsets(y ~ x1 + x2 + x3 + x4, data=data, nbest=1)
subset_summary <- summary(subset_models)
# Select models based on R² and Adjusted R²
best_r2_model <- which.max(subset_summary$rsq)
best_adj_r2_model <- which.max(subset_summary$adjr2)
# (c): Mallow's Cp statistic
best_cp_model <- which.min(subset_summary$cp)
# (d), (e), (f): Forward selection, Backward elimination, and Stepwise selection
null_model <- lm(y ~ 1, data=data)
# Forward Selection
forward_model <- step(null_model, direction="forward", scope=formula(full_model), trace=FALSE)
# Backward Elimination
backward_model <- step(full_model, direction="backward", trace=FALSE)
# Stepwise Selection
stepwise_model <- step(null_model, direction="both", scope=formula(full_model), trace=FALSE)
# Step (ii): Compute PRESS, AIC, and BIC for selected subset models
# Define function for PRESS statistic
PRESS <- function(model) {
pr <- residuals(model)/(1 - lm.influence(model)$hat)
sum(pr^2)
}
# Extract the best models
best_r2_formula <- as.formula(paste("y ~", paste(names(coef(subset_models, best_r2_model))[-1], collapse=" + ")))
print(best_r2_model)
best_adj_r2_formula <- as.formula(paste("y ~", paste(names(coef(subset_models, best_adj_r2_model))[-1], collapse=" + ")))
best_cp_formula <- as.formula(paste("y ~", paste(names(coef(subset_models, best_cp_model))[-1], collapse=" + ")))
# Fit the selected models
model_r2 <- lm(best_r2_formula, data=data)
model_adj_r2 <- lm(best_adj_r2_formula, data=data)
model_cp <- lm(best_cp_formula, data=data)
# PRESS statistic
press_r2 <- PRESS(model_r2)
press_adj_r2 <- PRESS(model_adj_r2)
press_cp <- PRESS(model_cp)
# AIC and BIC for the models
aic_r2 <- AIC(model_r2)
bic_r2 <- BIC(model_r2)
aic_adj_r2 <- AIC(model_adj_r2)
bic_adj_r2 <- BIC(model_adj_r2)
aic_cp <- AIC(model_cp)
bic_cp <- BIC(model_cp)
# Output the results
cat("Model based on R-squared:\n")
cat("Formula:", best_r2_formula, "\n")
# Load necessary libraries
library(MASS)      # For stepwise selection
library(leaps)     # For subset selection
library(car)       # For PRESS statistic calculation
library(stats)     # For AIC and BIC calculation
# Hald Cement Data (Replace this with your actual dataset if needed)
data <- cement
# Full model with all predictors
full_model <- lm(y ~ x1 + x2 + x3 + x4, data=data)
# Step (i): Subset Models Selection Based on Different Criteria
# (a) & (b): R-squared and Adjusted R-squared based models using regsubsets
subset_models <- regsubsets(y ~ x1 + x2 + x3 + x4, data=data, nbest=1)
subset_summary <- summary(subset_models)
# Select models based on R² and Adjusted R²
best_r2_model <- which.max(subset_summary$rsq)
best_adj_r2_model <- which.max(subset_summary$adjr2)
# (c): Mallow's Cp statistic
best_cp_model <- which.min(subset_summary$cp)
# (d), (e), (f): Forward selection, Backward elimination, and Stepwise selection
null_model <- lm(y ~ 1, data=data)
# Forward Selection
forward_model <- step(null_model, direction="forward", scope=formula(full_model), trace=FALSE)
# Backward Elimination
backward_model <- step(full_model, direction="backward", trace=FALSE)
# Stepwise Selection
stepwise_model <- step(null_model, direction="both", scope=formula(full_model), trace=FALSE)
# Step (ii): Compute PRESS, AIC, and BIC for selected subset models
# Define function for PRESS statistic
PRESS <- function(model) {
pr <- residuals(model)/(1 - lm.influence(model)$hat)
sum(pr^2)
}
# Extract the best models
best_r2_formula <- as.formula(paste("y ~", paste(names(coef(subset_models, best_r2_model))[-1], collapse=" + ")))
print(best_r2_formula)
best_adj_r2_formula <- as.formula(paste("y ~", paste(names(coef(subset_models, best_adj_r2_model))[-1], collapse=" + ")))
best_cp_formula <- as.formula(paste("y ~", paste(names(coef(subset_models, best_cp_model))[-1], collapse=" + ")))
# Fit the selected models
model_r2 <- lm(best_r2_formula, data=data)
model_adj_r2 <- lm(best_adj_r2_formula, data=data)
model_cp <- lm(best_cp_formula, data=data)
# PRESS statistic
press_r2 <- PRESS(model_r2)
press_adj_r2 <- PRESS(model_adj_r2)
press_cp <- PRESS(model_cp)
# AIC and BIC for the models
aic_r2 <- AIC(model_r2)
bic_r2 <- BIC(model_r2)
aic_adj_r2 <- AIC(model_adj_r2)
bic_adj_r2 <- BIC(model_adj_r2)
aic_cp <- AIC(model_cp)
bic_cp <- BIC(model_cp)
# Output the results
cat("Model based on R-squared:\n")
cat("Formula:", best_r2_formula, "\n")
# cat("Formula:", best_r2_formula, "\n")
cat("PRESS:", press_r2, "\n")
cat("Stepwise Selection Model:\n")
# Load necessary libraries
library(MASS)      # For stepwise selection
library(leaps)     # For subset selection
library(car)       # For PRESS statistic calculation
library(stats)     # For AIC and BIC calculation
# Hald Cement Data (Replace this with your actual dataset if needed)
data <- cement
# Full model with all predictors
full_model <- lm(y ~ x1 + x2 + x3 + x4, data=data)
# Step (i): Subset Models Selection Based on Different Criteria
# (a) & (b): R-squared and Adjusted R-squared based models using regsubsets
subset_models <- regsubsets(y ~ x1 + x2 + x3 + x4, data=data, nbest=1)
subset_summary <- summary(subset_models)
# Select models based on R² and Adjusted R²
best_r2_model <- which.max(subset_summary$rsq)
best_adj_r2_model <- which.max(subset_summary$adjr2)
# (c): Mallow's Cp statistic
best_cp_model <- which.min(subset_summary$cp)
# (d), (e), (f): Forward selection, Backward elimination, and Stepwise selection
null_model <- lm(y ~ 1, data=data)
# Forward Selection
forward_model <- step(null_model, direction="forward", scope=formula(full_model), trace=FALSE)
# Backward Elimination
backward_model <- step(full_model, direction="backward", trace=FALSE)
# Stepwise Selection
stepwise_model <- step(null_model, direction="both", scope=formula(full_model), trace=FALSE)
# Step (ii): Compute PRESS, AIC, and BIC for selected subset models
# Define function for PRESS statistic
PRESS <- function(model) {
pr <- residuals(model)/(1 - lm.influence(model)$hat)
sum(pr^2)
}
# Extract the best models
best_r2_formula <- as.formula(paste("y ~", paste(names(coef(subset_models, best_r2_model))[-1], collapse=" + ")))
best_adj_r2_formula <- as.formula(paste("y ~", paste(names(coef(subset_models, best_adj_r2_model))[-1], collapse=" + ")))
best_cp_formula <- as.formula(paste("y ~", paste(names(coef(subset_models, best_cp_model))[-1], collapse=" + ")))
# Fit the selected models
model_r2 <- lm(best_r2_formula, data=data)
model_adj_r2 <- lm(best_adj_r2_formula, data=data)
model_cp <- lm(best_cp_formula, data=data)
# PRESS statistic
press_r2 <- PRESS(model_r2)
press_adj_r2 <- PRESS(model_adj_r2)
press_cp <- PRESS(model_cp)
# AIC and BIC for the models
aic_r2 <- AIC(model_r2)
bic_r2 <- BIC(model_r2)
aic_adj_r2 <- AIC(model_adj_r2)
bic_adj_r2 <- BIC(model_adj_r2)
aic_cp <- AIC(model_cp)
bic_cp <- BIC(model_cp)
# Output the results
cat("Model based on R-squared:\n")
# cat("Formula:", best_r2_formula, "\n")
cat("PRESS:", press_r2, "\n")
cat("AIC:", aic_r2, "\n")
cat("BIC:", bic_r2, "\n\n")
cat("Model based on Adjusted R-squared:\n")
cat("Formula:", best_adj_r2_formula, "\n")
View(cement)
Hald_Cement_Data = cement
library(leaps)
models <- regsubsets(Y~., data = Hald_Cement_Data, nvmax = 4)
models <- regsubsets(y~., data = Hald_Cement_Data, nvmax = 4)
models_summ = summary(models)
r2_p =models_summ$rsq
r2adj_p = models_summ$adjr2
library(olsrr)
full_model = lm(y~x1+x2+x3+x4, data = Hald_Cement_Data)
all_models = ols_step_all_possible(full_model)
ols_step_best_subset(full_model)
ols_step_forward_p(full_model)
ols_step_backward_p(full_model)
ols_step_both_p(full_model)
model1 = lm(Y~X1+X2+X4, data = Hald_Cement_Data)
ols_aic(model1)
library(flexmix)
BIC(model1)
install.packages("flexmix")
library(flexmix)
BIC(model1)
PRESS(model1)
model2 = lm(Y~X1+X2, data = Hald_Cement_Data)
model1 = lm(y~x1+x2+x4, data = Hald_Cement_Data)
ols_aic(model1)
library(flexmix)
BIC(model1)
PRESS <- function(model) {
i <- residuals(model)/(1 - lm.influence(model)$hat)
sum(i^2)
}
PRESS(model1)
model2 = lm(Y~X1+X2, data = Hald_Cement_Data)
ols_aic(model2)
BIC(model2)
model2 = lm(y~x1+x2, data = Hald_Cement_Data)
ols_aic(model2)
BIC(model2)
PRESS(model2)
view(cement)
library(MPV)      # Dataset
library(MASS)      # For stepwise selection
library(leaps)     # For subset selection
library(car)       # For PRESS statistic calculation
library(stats)     # For AIC and BIC calculation
library(MPV)      # Dataset
library(MASS)      # For stepwise selection
library(leaps)     # For subset selection
library(car)       # For PRESS statistic calculation
library(stats)     # For AIC and BIC calculation
# Step (i): Subset Models Selection Based on Different Criteria
# (a) & (b): R-squared and Adjusted R-squared based models using regsubsets
subset_models <- regsubsets(y ~ x1 + x2 + x3 + x4, data=data, nbest=1)
subset_summary <- summary(subset_models)
# Select models based on R² and Adjusted R²
best_r2_model <- which.max(subset_summary$rsq)
best_r2_formula <- as.formula(paste("y ~", paste(names(coef(subset_models, best_r2_model))[-1], collapse=" + ")))
best_r2_model
# Step (i): Subset Models Selection Based on Different Criteria
# (a) & (b): R-squared and Adjusted R-squared based models using regsubsets
subset_models <- regsubsets(y ~ x1 + x2 + x3 + x4, data=data, nbest=1)
subset_summary <- summary(subset_models)
# Select models based on R² and Adjusted R²
best_r2_model <- which.max(subset_summary$rsq)
best_r2_formula <- as.formula(paste("y ~", paste(names(coef(subset_models, best_r2_model))[-1], collapse=" + ")))
best_r2_formula
best_adj_r2_model <- which.max(subset_summary$adjr2)
best_adj_r2_formula <- as.formula(paste("y ~", paste(names(coef(subset_models, best_adj_r2_model))[-1], collapse=" + ")))
best_adj_r2_model <- which.max(subset_summary$adjr2)
best_adj_r2_formula <- as.formula(paste("y ~", paste(names(coef(subset_models, best_adj_r2_model))[-1], collapse=" + ")))
best_adj_r2_model <- which.max(subset_summary$adjr2)
best_adj_r2_formula <- as.formula(paste("y ~", paste(names(coef(subset_models, best_adj_r2_model))[-1], collapse=" + ")))
best_adj_r2_model
best_adj_r2_model <- which.max(subset_summary$adjr2)
best_adj_r2_formula <- as.formula(paste("y ~", paste(names(coef(subset_models, best_adj_r2_model))[-1], collapse=" + ")))
best_adj_r2_formula
# (c): Mallow's Cp statistic
best_cp_model <- which.min(subset_summary$cp)
best_cp_formula <- as.formula(paste("y ~", paste(names(coef(subset_models, best_cp_model))[-1], collapse=" + ")))
best_cp_formula
null_model <- lm(y ~ 1, data=data)
# Forward Selection
forward_model <- step(null_model, direction="forward", scope=formula(full_model), trace=FALSE)
# Backward Elimination
backward_model <- step(full_model, direction="backward", trace=FALSE)
# Stepwise Selection
stepwise_model <- step(null_model, direction="both", scope=formula(full_model), trace=FALSE)
null_model <- lm(y ~ 1, data=data)
# Forward Selection
forward_model <- step(null_model, direction="forward", scope=formula(full_model), trace=FALSE)
# Backward Elimination
backward_model <- step(full_model, direction="backward", trace=FALSE)
# Stepwise Selection
stepwise_model <- step(null_model, direction="both", scope=formula(full_model), trace=FALSE)
forward_model
null_model <- lm(y ~ 1, data=data)
# Forward Selection
forward_model <- step(null_model, direction="forward", scope=formula(full_model), trace=FALSE)
forward_model
# Backward Elimination
backward_model <- step(full_model, direction="backward", trace=FALSE)
backward_model
# Stepwise Selection
stepwise_model <- step(null_model, direction="both", scope=formula(full_model), trace=FALSE)
stepwise_model
View(data)
# Output the results
cat("Model based on R-squared:\n")
cat("Formula:", best_r2_formula, "\n")
# (c): Mallow's Cp statistic
best_cp_model <- which.min(subset_summary$cp)
best_cp_formula <- as.formula(paste("y ~", paste(names(coef(subset_models, best_cp_model))[-1], collapse=" + ")))
as.string(best_cp_formula)
library(MPV)      # Dataset
library(MASS)      # For stepwise selection
library(leaps)     # For subset selection
library(car)       # For PRESS statistic calculation
library(stats)     # For AIC and BIC calculation
library(formula.tools)
install.packages("formula.tools")
library(MPV)      # Dataset
library(MASS)      # For stepwise selection
library(leaps)     # For subset selection
library(car)       # For PRESS statistic calculation
library(stats)     # For AIC and BIC calculation
library(formula.tools)
# (c): Mallow's Cp statistic
best_cp_model <- which.min(subset_summary$cp)
best_cp_formula <- as.formula(paste("y ~", paste(names(coef(subset_models, best_cp_model))[-1], collapse=" + ")))
as.string(best_cp_formula)
# (c): Mallow's Cp statistic
best_cp_model <- which.min(subset_summary$cp)
best_cp_formula <- as.formula(paste("y ~", paste(names(coef(subset_models, best_cp_model))[-1], collapse=" + ")))
as.character(best_cp_formula)
# (c): Mallow's Cp statistic
best_cp_model <- which.min(subset_summary$cp)
best_cp_formula <- paste("y ~", paste(names(coef(subset_models, best_cp_model))[-1], collapse=" + "))
best_cp_formula
# (c): Mallow's Cp statistic
best_cp_model <- which.min(subset_summary$cp)
best_cp_formula <- paste("y ~", paste(names(coef(subset_models, best_cp_model))[-1], collapse=" + "))
best_cp_formula
# (a) & (b): R-squared and Adjusted R-squared based models using regsubsets
subset_models <- regsubsets(y ~ x1 + x2 + x3 + x4, data=data, nbest=1)
subset_summary <- summary(subset_models)
# Select models based on R² and Adjusted R²
best_r2_model <- which.max(subset_summary$rsq)
best_r2_formula <- paste("y ~", paste(names(coef(subset_models, best_r2_model))[-1], collapse=" + "))
best_r2_formula
best_adj_r2_model <- which.max(subset_summary$adjr2)
best_adj_r2_formula <- paste("y ~", paste(names(coef(subset_models, best_adj_r2_model))[-1], collapse=" + "))
best_adj_r2_formula
# Output the results
cat("Model based on R-squared:\n")
cat("Formula:", best_r2_formula, "\n")
cat("PRESS:", press_r2, "\n")
cat("AIC:", aic_r2, "\n")
cat("BIC:", bic_r2, "\n\n")
cat("Model based on Adjusted R-squared:\n")
cat("Formula:", best_adj_r2_formula, "\n")
cat("PRESS:", press_adj_r2, "\n")
cat("AIC:", aic_adj_r2, "\n")
cat("BIC:", bic_adj_r2, "\n\n")
cat("Model based on Mallow's Cp:\n")
cat("Formula:", best_cp_formula, "\n")
cat("PRESS:", press_cp, "\n")
cat("AIC:", aic_cp, "\n")
cat("BIC:", bic_cp, "\n\n")
cat("Forward Selection Model:\n")
cat("Formula:", formula(forward_model), "\n")
# Output the results
cat("Model based on R-squared:\n")
cat("Formula:", best_r2_formula, "\n")
cat("PRESS:", press_r2, "\n")
cat("AIC:", aic_r2, "\n")
cat("BIC:", bic_r2, "\n\n")
cat("Model based on Adjusted R-squared:\n")
cat("Formula:", best_adj_r2_formula, "\n")
cat("PRESS:", press_adj_r2, "\n")
cat("AIC:", aic_adj_r2, "\n")
cat("BIC:", bic_adj_r2, "\n\n")
cat("Model based on Mallow's Cp:\n")
cat("Formula:", best_cp_formula, "\n")
cat("PRESS:", press_cp, "\n")
cat("AIC:", aic_cp, "\n")
cat("BIC:", bic_cp, "\n\n")
cat("Forward Selection Model:\n")
cat("Formula:", forward_model, "\n")
# Stepwise Selection
stepwise_model <- step(null_model, direction="both", scope=formula(full_model), trace=FALSE)
stepwise_model$model
# Stepwise Selection
stepwise_model <- step(null_model, direction="both", scope=formula(full_model), trace=FALSE)
stepwise_model$call
# Stepwise Selection
stepwise_model <- step(null_model, direction="both", scope=formula(full_model), trace=FALSE)
stepwise_model$call$formula
# Stepwise Selection
stepwise_model <- step(null_model, direction="both", scope=formula(full_model), trace=FALSE)
stepwise_model
# Output the results
cat("Model based on R-squared:\n")
cat("Formula:", best_r2_formula, "\n")
cat("PRESS:", press_r2, "\n")
cat("AIC:", aic_r2, "\n")
cat("BIC:", bic_r2, "\n\n")
cat("Model based on Adjusted R-squared:\n")
cat("Formula:", best_adj_r2_formula, "\n")
cat("PRESS:", press_adj_r2, "\n")
cat("AIC:", aic_adj_r2, "\n")
cat("BIC:", bic_adj_r2, "\n\n")
cat("Model based on Mallow's Cp:\n")
cat("Formula:", best_cp_formula, "\n")
cat("PRESS:", press_cp, "\n")
cat("AIC:", aic_cp, "\n")
cat("BIC:", bic_cp, "\n\n")
cat("Forward Selection Model:\n")
cat("Formula:", forward_model$call$formula, "\n")
# Output the results
cat("Model based on R-squared:\n")
cat("Formula:", best_r2_formula, "\n")
cat("PRESS:", press_r2, "\n")
cat("AIC:", aic_r2, "\n")
cat("BIC:", bic_r2, "\n\n")
cat("Model based on Adjusted R-squared:\n")
cat("Formula:", best_adj_r2_formula, "\n")
cat("PRESS:", press_adj_r2, "\n")
cat("AIC:", aic_adj_r2, "\n")
cat("BIC:", bic_adj_r2, "\n\n")
cat("Model based on Mallow's Cp:\n")
cat("Formula:", best_cp_formula, "\n")
cat("PRESS:", press_cp, "\n")
cat("AIC:", aic_cp, "\n")
cat("BIC:", bic_cp, "\n\n")
cat("Forward Selection Model:\n")
cat("Formula:", as.character(forward_model$call$formula), "\n")
cat("PRESS:", PRESS(forward_model), "\n")
cat("AIC:", AIC(forward_model), "\n")
cat("BIC:", BIC(forward_model), "\n\n")
cat("Backward Elimination Model:\n")
cat("Formula:", formula(backward_model), "\n")
# Output the results
cat("Model based on R-squared:\n")
cat("Formula:", best_r2_formula, "\n")
cat("PRESS:", press_r2, "\n")
cat("AIC:", aic_r2, "\n")
cat("BIC:", bic_r2, "\n\n")
cat("Model based on Adjusted R-squared:\n")
cat("Formula:", best_adj_r2_formula, "\n")
cat("PRESS:", press_adj_r2, "\n")
cat("AIC:", aic_adj_r2, "\n")
cat("BIC:", bic_adj_r2, "\n\n")
cat("Model based on Mallow's Cp:\n")
cat("Formula:", best_cp_formula, "\n")
cat("PRESS:", press_cp, "\n")
cat("AIC:", aic_cp, "\n")
cat("BIC:", bic_cp, "\n\n")
cat("Forward Selection Model:\n")
cat("Formula:", as.character(forward_model$call$formula), "\n")
cat("PRESS:", PRESS(forward_model), "\n")
cat("AIC:", AIC(forward_model), "\n")
cat("BIC:", BIC(forward_model), "\n\n")
cat("Backward Elimination Model:\n")
cat("Formula:", as.character(backward_model$call$formula), "\n")
cat("PRESS:", PRESS(backward_model), "\n")
cat("AIC:", AIC(backward_model), "\n")
cat("BIC:", BIC(backward_model), "\n\n")
cat("Stepwise Selection Model:\n")
cat("Formula:", as.character(steowise_model$call$formula), "\n")
# Output the results
cat("Model based on R-squared:\n")
cat("Formula:", best_r2_formula, "\n")
cat("PRESS:", press_r2, "\n")
cat("AIC:", aic_r2, "\n")
cat("BIC:", bic_r2, "\n\n")
cat("Model based on Adjusted R-squared:\n")
cat("Formula:", best_adj_r2_formula, "\n")
cat("PRESS:", press_adj_r2, "\n")
cat("AIC:", aic_adj_r2, "\n")
cat("BIC:", bic_adj_r2, "\n\n")
cat("Model based on Mallow's Cp:\n")
cat("Formula:", best_cp_formula, "\n")
cat("PRESS:", press_cp, "\n")
cat("AIC:", aic_cp, "\n")
cat("BIC:", bic_cp, "\n\n")
cat("Forward Selection Model:\n")
cat("Formula:", as.character(forward_model$call$formula), "\n")
cat("PRESS:", PRESS(forward_model), "\n")
cat("AIC:", AIC(forward_model), "\n")
cat("BIC:", BIC(forward_model), "\n\n")
cat("Backward Elimination Model:\n")
cat("Formula:", as.character(backward_model$call$formula), "\n")
cat("PRESS:", PRESS(backward_model), "\n")
cat("AIC:", AIC(backward_model), "\n")
cat("BIC:", BIC(backward_model), "\n\n")
cat("Stepwise Selection Model:\n")
cat("Formula:", as.character(stepwise_model$call$formula), "\n")
cat("PRESS:", PRESS(stepwise_model), "\n")
cat("AIC:", AIC(stepwise_model), "\n")
cat("BIC:", BIC(stepwise_model), "\n")
setwd("~/Library/CloudStorage/OneDrive-IITKanpur/Documents/SEM9 - IITK/MTH441/Lab 8/images")
