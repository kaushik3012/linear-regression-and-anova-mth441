cat("Null Deviance:", poisson_model$null.deviance,
"on", poisson_model$df.null, "degrees of freedom\n")
cat("Residual Deviance:", poisson_model$deviance,
"on", poisson_model$df.residual, "degrees of freedom\n")
cat("AIC:", poisson_model$aic, "\n")
cat("Pseudo R-squared:", pseudo_r2, "\n")
# Display ANOVA results
cat("\nAnalysis of Deviance Table:\n")
print(anova_result)
# Calculate and print odds ratios and confidence intervals
coef_exp <- exp(coef(poisson_model))
conf_int <- exp(confint(poisson_model))
coef_table <- cbind(Estimate = coef_exp,
CI_lower = conf_int[,1],
CI_upper = conf_int[,2])
cat("\nExponentiated Coefficients (Rate Ratios) with 95% CI:\n")
print(coef_table)
# Perform analysis of deviance
anova_result <- anova(poisson_model, test = "LRT")
# Create diagnostic plots
par(mfrow = c(2,2))
plot(poisson_model)
# Print additional model statistics
cat("\nModel Statistics:\n")
cat("Null Deviance:", poisson_model$null.deviance,
"on", poisson_model$df.null, "degrees of freedom\n")
cat("Residual Deviance:", poisson_model$deviance,
"on", poisson_model$df.residual, "degrees of freedom\n")
cat("AIC:", poisson_model$aic, "\n")
cat("Pseudo R-squared:", pseudo_r2, "\n")
# Display ANOVA results
cat("\nAnalysis of Deviance Table:\n")
print(anova_result)
# Calculate and print odds ratios and confidence intervals
coef_exp <- exp(coef(poisson_model))
conf_int <- exp(confint(poisson_model))
coef_table <- cbind(Estimate = coef_exp,
CI_lower = conf_int[,1],
CI_upper = conf_int[,2])
cat("\nExponentiated Coefficients (Rate Ratios) with 95% CI:\n")
print(coef_table)
el$null.deviance
# Perform analysis of deviance
anova_result <- anova(poisson_model, test = "wald")
# Perform analysis of deviance
anova_result <- anova(poisson_model, test = "Cp")
# Create diagnostic plots
par(mfrow = c(2,2))
plot(poisson_model)
# Print additional model statistics
cat("\nModel Statistics:\n")
cat("Null Deviance:", poisson_model$null.deviance,
"on", poisson_model$df.null, "degrees of freedom\n")
cat("Residual Deviance:", poisson_model$deviance,
"on", poisson_model$df.residual, "degrees of freedom\n")
cat("AIC:", poisson_model$aic, "\n")
cat("Pseudo R-squared:", pseudo_r2, "\n")
# Display ANOVA results
cat("\nAnalysis of Deviance Table:\n")
print(anova_result)
# Calculate and print odds ratios and confidence intervals
coef_exp <- exp(coef(poisson_model))
conf_int <- exp(confint(poisson_model))
coef_table <- cbind(Estimate = coef_exp,
CI_lower = conf_int[,1],
CI_upper = conf_int[,2])
cat("\nExponentiated Coefficients (Rate Ratios) with 95% CI:\n")
print(coef_table)
# Perform Walt's test for analysis of deviance
library(rcompanion)
install.packages("rcompanion")
# Perform Walt's test for analysis of deviance
library(rcompanion)
walt_result <- waltTest(poisson_model)
walt_result <- waltTest(poisson_model)
walt_result <- walttest(poisson_model)
walt_result <- waldtest(poisson_model)
# Perform Walt's test for analysis of deviance
library(lmtest)
walt_result <- waldtest(poisson_model)
walt_result
# Perform analysis of deviance
anova_result <- anova(poisson_model, test = "F")
print(anova_result)
# Create the dataset
aircraft_data <- data.frame(
y = c(0,1,0,0,0,0,1,0,0,2,1,1,1,1,2,3,1,1,1,2,0,1,1,2,5,1,1,5,5,7),
x1 = c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
x2 = c(4,4,4,5,5,5,6,6,6,7,7,7,8,8,8,7,7,7,10,10,10,12,12,12,8,8,8,14,14,14),
x3 = c(91.5,84.0,76.5,69.0,61.5,80.0,72.5,65.0,57.5,50.0,103.0,95.5,88.0,80.5,73.0,
116.1,100.6,85.0,69.4,53.9,112.3,96.7,81.1,65.6,50.0,120.0,104.4,88.9,73.7,57.8)
)
# Fit Poisson regression model
poisson_model <- glm(y ~ x1 + x2 + x3, family = poisson(link = "log"), data = aircraft_data)
# Display model summary
summary(poisson_model)
# Calculate pseudo R-squared (1 - residual deviance/null deviance)
pseudo_r2 <- 1 - poisson_model$deviance/poisson_model$null.deviance
# Perform analysis of deviance
anova_result <- anova(poisson_model, test = "Chisq")
# Create diagnostic plots
par(mfrow = c(2,2))
plot(poisson_model)
# Print additional model statistics
cat("\nModel Statistics:\n")
cat("Null Deviance:", poisson_model$null.deviance,
"on", poisson_model$df.null, "degrees of freedom\n")
cat("Residual Deviance:", poisson_model$deviance,
"on", poisson_model$df.residual, "degrees of freedom\n")
cat("AIC:", poisson_model$aic, "\n")
cat("Pseudo R-squared:", pseudo_r2, "\n")
# Display ANOVA results
cat("\nAnalysis of Deviance Table:\n")
print(anova_result)
# Calculate and print odds ratios and confidence intervals
coef_exp <- exp(coef(poisson_model))
conf_int <- exp(confint(poisson_model))
coef_table <- cbind(Estimate = coef_exp,
CI_lower = conf_int[,1],
CI_upper = conf_int[,2])
cat("\nExponentiated Coefficients (Rate Ratios) with 95% CI:\n")
print(coef_table)
# Perform Walt's test for analysis of deviance
library(lmtest)
walt_result <- waldtest(poisson_model)
cat("\Wald's Test Results:\n")
# Create the dataset
aircraft_data <- data.frame(
y = c(0,1,0,0,0,0,1,0,0,2,1,1,1,1,2,3,1,1,1,2,0,1,1,2,5,1,1,5,5,7),
x1 = c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
x2 = c(4,4,4,5,5,5,6,6,6,7,7,7,8,8,8,7,7,7,10,10,10,12,12,12,8,8,8,14,14,14),
x3 = c(91.5,84.0,76.5,69.0,61.5,80.0,72.5,65.0,57.5,50.0,103.0,95.5,88.0,80.5,73.0,
116.1,100.6,85.0,69.4,53.9,112.3,96.7,81.1,65.6,50.0,120.0,104.4,88.9,73.7,57.8)
)
# Fit Poisson regression model
poisson_model <- glm(y ~ x1 + x2 + x3, family = poisson(link = "log"), data = aircraft_data)
# Display model summary
summary(poisson_model)
# Calculate pseudo R-squared (1 - residual deviance/null deviance)
pseudo_r2 <- 1 - poisson_model$deviance/poisson_model$null.deviance
# Perform analysis of deviance
anova_result <- anova(poisson_model, test = "Chisq")
# Create diagnostic plots
par(mfrow = c(2,2))
plot(poisson_model)
# Print additional model statistics
cat("\nModel Statistics:\n")
cat("Null Deviance:", poisson_model$null.deviance,
"on", poisson_model$df.null, "degrees of freedom\n")
cat("Residual Deviance:", poisson_model$deviance,
"on", poisson_model$df.residual, "degrees of freedom\n")
cat("AIC:", poisson_model$aic, "\n")
cat("Pseudo R-squared:", pseudo_r2, "\n")
# Display ANOVA results
cat("\nAnalysis of Deviance Table:\n")
print(anova_result)
# Calculate and print odds ratios and confidence intervals
coef_exp <- exp(coef(poisson_model))
conf_int <- exp(confint(poisson_model))
coef_table <- cbind(Estimate = coef_exp,
CI_lower = conf_int[,1],
CI_upper = conf_int[,2])
cat("\nExponentiated Coefficients (Rate Ratios) with 95% CI:\n")
print(coef_table)
# Perform Walt's test for analysis of deviance
library(lmtest)
walt_result <- waldtest(poisson_model)
cat("\nWald's Test Results:\n")
print(walt_result)
# Create the dataset
aircraft_data <- data.frame(
y = c(0,1,0,0,0,0,1,0,0,2,1,1,1,1,2,3,1,1,1,2,0,1,1,2,5,1,1,5,5,7),
x1 = c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
x2 = c(4,4,4,5,5,5,6,6,6,7,7,7,8,8,8,7,7,7,10,10,10,12,12,12,8,8,8,14,14,14),
x3 = c(91.5,84.0,76.5,69.0,61.5,80.0,72.5,65.0,57.5,50.0,103.0,95.5,88.0,80.5,73.0,
116.1,100.6,85.0,69.4,53.9,112.3,96.7,81.1,65.6,50.0,120.0,104.4,88.9,73.7,57.8)
)
# Fit Poisson regression model
poisson_model <- glm(y ~ x1 + x2 + x3, family = poisson(link = "log"), data = aircraft_data)
# Display model summary
summary(poisson_model)
# Calculate pseudo R-squared (1 - residual deviance/null deviance)
pseudo_r2 <- 1 - poisson_model$deviance/poisson_model$null.deviance
# Perform analysis of deviance
anova_result <- anova(poisson_model, test = "Chisq")
# Print additional model statistics
cat("\nModel Statistics:\n")
cat("Null Deviance:", poisson_model$null.deviance,
"on", poisson_model$df.null, "degrees of freedom\n")
cat("Residual Deviance:", poisson_model$deviance,
"on", poisson_model$df.residual, "degrees of freedom\n")
cat("AIC:", poisson_model$aic, "\n")
cat("Pseudo R-squared:", pseudo_r2, "\n")
# Display ANOVA results
cat("\nAnalysis of Deviance Table:\n")
print(anova_result)
# Calculate and print odds ratios and confidence intervals
coef_exp <- exp(coef(poisson_model))
conf_int <- exp(confint(poisson_model))
coef_table <- cbind(Estimate = coef_exp,
CI_lower = conf_int[,1],
CI_upper = conf_int[,2])
cat("\nExponentiated Coefficients (Rate Ratios) with 95% CI:\n")
print(coef_table)
# Perform Walt's test for analysis of deviance
library(lmtest)
walt_result <- waldtest(poisson_model)
cat("\nWald's Test Results:\n")
print(walt_result)
# Create the dataset
yarn_data <- data.frame(
y = c(674, 1414, 3636, 338, 1022, 1568, 170, 442, 1140, 370, 1198, 3184, 266, 620, 1070, 118, 332, 884, 292, 634, 2000, 210, 438, 566, 90, 220, 360),
x1 = c(-1, 0, 1, -1, 0, 1, -1, 0, 1, -1, 0, 1, -1, 0, 1, -1, 0, 1, -1, 0, 1, -1, 0, 1, -1, 0, 1),
x2 = c(-1, -1, -1, 0, 0, 0, 1, 1, 1, -1, -1, -1, 0, 0, 0, 1, 1, 1, -1, -1, -1, 0, 0, 0, 1, 1, 1),
x3 = c(-1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1)
)
# Fit Gamma regression model with log link
gamma_model <- glm(y ~ x1 + x2 + x3, family = Gamma(link = "log"), data = yarn_data)
# Display model summary
summary(gamma_model)
# Calculate pseudo R-squared (1 - residual deviance/null deviance)
pseudo_r2 <- 1 - gamma_model$deviance/gamma_model$null.deviance
# Perform analysis of deviance
anova_result <- anova(gamma_model, test = "Chisq")
# Create diagnostic plots
par(mfrow = c(2,2))
plot(gamma_model)
# Print additional model statistics
cat("\nModel Statistics:\n")
cat("Null Deviance:", gamma_model$null.deviance,
"on", gamma_model$df.null, "degrees of freedom\n")
cat("Residual Deviance:", gamma_model$deviance,
"on", gamma_model$df.residual, "degrees of freedom\n")
cat("AIC:", gamma_model$aic, "\n")
cat("Pseudo R-squared:", pseudo_r2, "\n")
# Display ANOVA results
cat("\nAnalysis of Deviance Table:\n")
print(anova_result)
# Calculate and print odds ratios and confidence intervals
coef_exp <- exp(coef(gamma_model))
conf_int <- exp(confint(gamma_model))
coef_table <- cbind(Estimate = coef_exp,
CI_lower = conf_int[,1],
CI_upper = conf_int[,2])
cat("\nExponentiated Coefficients (Rate Ratios) with 95% CI:\n")
print(coef_table)
walt_result <- waldtest(poisson_model)
cat("\nWald's test results:\n")
print(walt_result)
# Create the dataset
yarn_data <- data.frame(
y = c(674, 1414, 3636, 338, 1022, 1568, 170, 442, 1140, 370, 1198, 3184, 266, 620, 1070, 118, 332, 884, 292, 634, 2000, 210, 438, 566, 90, 220, 360),
x1 = c(-1, 0, 1, -1, 0, 1, -1, 0, 1, -1, 0, 1, -1, 0, 1, -1, 0, 1, -1, 0, 1, -1, 0, 1, -1, 0, 1),
x2 = c(-1, -1, -1, 0, 0, 0, 1, 1, 1, -1, -1, -1, 0, 0, 0, 1, 1, 1, -1, -1, -1, 0, 0, 0, 1, 1, 1),
x3 = c(-1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1)
)
# Fit Gamma regression model with log link
gamma_model <- glm(y ~ x1 + x2 + x3, family = Gamma(link = "log"), data = yarn_data)
# Display model summary
summary(gamma_model)
# Calculate pseudo R-squared (1 - residual deviance/null deviance)
pseudo_r2 <- 1 - gamma_model$deviance/gamma_model$null.deviance
# Perform analysis of deviance
anova_result <- anova(gamma_model, test = "Chisq")
# Print additional model statistics
cat("\nModel Statistics:\n")
cat("Null Deviance:", gamma_model$null.deviance,
"on", gamma_model$df.null, "degrees of freedom\n")
cat("Residual Deviance:", gamma_model$deviance,
"on", gamma_model$df.residual, "degrees of freedom\n")
cat("AIC:", gamma_model$aic, "\n")
cat("Pseudo R-squared:", pseudo_r2, "\n")
# Display ANOVA results
cat("\nAnalysis of Deviance Table:\n")
print(anova_result)
# Calculate and print odds ratios and confidence intervals
coef_exp <- exp(coef(gamma_model))
conf_int <- exp(confint(gamma_model))
coef_table <- cbind(Estimate = coef_exp,
CI_lower = conf_int[,1],
CI_upper = conf_int[,2])
cat("\nExponentiated Coefficients (Rate Ratios) with 95% CI:\n")
print(coef_table)
walt_result <- waldtest(poisson_model)
cat("\nWald's test results:\n")
print(walt_result)
sarima(gnpgr, 1, 0, 0) # AR(1)
library(astsa)
plot(gnp)
acf2(gnp, 50)
gnpgr = diff(log(gnp)) # growth rate
plot(gnpgr)
acf2(gnpgr, 24)
sarima(gnpgr, 1, 0, 0) # AR(1)
sarima(gnpgr, 1, 0, 2)
# Fit AR(1) model
cat("\nAR(1) Model Diagnostics:\n")
ar1_fit = sarima(gnpgr, 1, 0, 0)
# Display AR(1) coefficients and standard errors
cat("\nAR(1) Model Summary:\n")
ar1_fit$ttable
# Fit ARMA(1,2) model
cat("\nARMA(1,2) Model Diagnostics:\n")
arma12_fit = sarima(gnpgr, 1, 0, 2)
# Display ARMA(1,2) coefficients and standard errors
cat("\nARMA(1,2) Model Summary:\n")
arma12_fit$ttable
# Calculate AIC and BIC for AR(1)
ar1_aic = ar1_fit$ICs[1]
ar1_aicc = ar1_fit$ICs[2]
ar1_bic = ar1_fit$ICs[3]
# Calculate AIC and BIC for ARMA(1,2)
arma12_aic = arma12_fit$ICs[1]
arma12_aicc = arma12_fit$ICs[2]
arma12_bic = arma12_fit$ICs[3]
# Compare AIC and BIC
cat("\nModel Comparison:\n")
cat("AR(1) AIC:", ar1_aic,  "AICc:", ar1_aicc, "BIC:", ar1_bic, "\n")
cat("ARMA(1,2) AIC:", arma12_aic, "AICc:", arma12_aicc, "BIC:", arma12_bic, "\n")
# Calculate AIC and BIC for AR(1)
ar1_aic = ar1_fit$ICs[1]
ar1_aicc = ar1_fit$ICs[2]
ar1_bic = ar1_fit$ICs[3]
# Calculate AIC and BIC for ARMA(1,2)
arma12_aic = arma12_fit$ICs[1]
arma12_aicc = arma12_fit$ICs[2]
arma12_bic = arma12_fit$ICs[3]
# Compare AIC and BIC
cat("AR(1) AIC:", ar1_aic,  "AICc:", ar1_aicc, "BIC:", ar1_bic, "\n")
cat("ARMA(1,2) AIC:", arma12_aic, "AICc:", arma12_aicc, "BIC:", arma12_bic, "\n")
plot(unemp)
plot(diff(unemp))
plot(diff(diff(unemp))
plot(diff(diff(unemp))
plot(diff(diff(unemp))
plot(diff(diff(unemp))
plot(diff(diff(unemp)))
plot(diff(diff(unemp),2))
plot(diff(diff(unemp),4))
plot(diff(diff(unemp),12))
acf2(diff(diff(unemp), 12))
plot(diff(diff(unemp),5))
plot(diff(diff(unemp),6))
plot(diff(diff(unemp),10))
plot(diff(diff(unemp),16))
plot(diff(diff(unemp),15))
plot(diff(diff(unemp),12))
plot(diff(diff(unemp),13))
plot(diff(diff(unemp),11))
unemp
diff(unemp)
plot(diff(diff(unemp),12))
acf2(diff(diff(unemp), 12))
sma_fit <- sarima(unemp, 0,1,0, 0,1,1,12)
# Extract residuals
sma_residuals <- sma_fit$fit$residuals
acf2(sma_residuals)
plot(diff(diff(unemp),12))
acf2(diff(diff(unemp), 12))
sarima_model <- sarima(unemp, 2, 1, 0, 0, 1, 1, 12)
# Extract residuals
residuals <- sarima_model$fit$residuals
acf2(residuals)
sarima_model <- sarima(unemp, 2, 1, 0, 0, 1, 1, 12)
# Extract residuals
residuals <- sarima_model$fit$residuals
acf2(residuals)
# Print MSE
mse <- mean(residuals^2)
mse
sarima_model <- sarima(unemp, 1, 1, 1, 0, 1, 1, 12)
# Extract residuals
residuals <- sarima_model$fit$residuals
acf2(residuals)
# Print MSE
mse <- mean(residuals^2)
mse
# SARIMA(2,1,0) ×(0,1,1)12
sarima(unemp, 2, 1, 0, 0, 1, 1, 12)
# SARIMA(1,1,1) ×(0,1,1)12
sarima(unemp, 1, 1, 1, 0, 1, 1, 12)
# SARIMA(2,1,0) ×(0,1,1)12
sarima.for(unemp, 12, 2, 1, 0, 0, 1, 1, 12)
# SARIMA(1,1,1) ×(0,1,1)12
sarima.for(unemp,12, 1, 1, 1, 0, 1, 1, 12)
# SARIMA(2,1,0) ×(0,1,1)12
sarima.for(unemp, 12, 2, 1, 0, 0, 1, 1, 12)
# SARIMA(1,1,1) ×(0,1,1)12
sarima.for(unemp, 12, 1, 1, 1, 0, 1, 1, 12)
plot(jj)
plot(log(jj))
plot(diff(log(jj)))
plot(diff(diff(log(jj)), 4))
acf2(diff(diff(log(jj)), 4))
plot(diff(diff(log(jj)), 4))
acf2(diff(diff(log(jj)), 4))
sar_model <- sarima(log(jj), 0,1,0, 1,1,0, 4)
#Residuals
residuals <- sar_model$fit$residuals
acf2(residuals)
# SARIMA(1,1,0)x(1,1,0)4
sarima_model1 <- sarima(log(jj), 1,1,0, 1,1,0, 4)
sarima_model1$ICs[3]
# SARIMA(1,1,0)x(1,1,0)4
sarima_model2 <- sarima(log(jj), 1,1,1, 1,1,0, 4)
sarima_model2$ICs[3]
sarima.for(log(jj), 4,1,1,0, 1,1,0, 4)
sarima.for(log(jj), 4,1,1,1, 1,1,0, 4)
setwd("~/Library/CloudStorage/OneDrive-IITKanpur/Documents/SEM9 - IITK/MTH441/Lab 12")
# Load necessary package
if (!requireNamespace("dplyr", quietly = TRUE)) {
install.packages("dplyr")
}
library(dplyr)
# Create the data frame with the given data
data <- data.frame(
Fertilizer = rep(c("F1", "F2", "F3"), each = 3),
Crop = rep(c("Corn", "Rice", "Wheat"), times = 3),
MonthsHealthy = c(6, 4, 6, 5, 4.2, 5, 6, 5, 5.5)
)
# Check the structure of the data
print(data)
# Perform the two-way ANOVA
anova_result <- aov(MonthsHealthy ~ Fertilizer * Crop, data = data)
# Display the ANOVA table
summary(anova_result)
library(dplyr)
# Create the data frame with the given data
data <- data.frame(
Fertilizer = rep(c("F1", "F2", "F3"), each = 3),
Crop = rep(c("Corn", "Rice", "Wheat"), times = 3),
MonthsHealthy = c(6, 4, 6, 5, 4.2, 5, 6, 5, 5.5)
)
# Check the structure of the data
print(data)
# Perform the two-way ANOVA
anova_result <- aov(MonthsHealthy ~ Fertilizer * Crop, data = data)
# Display the ANOVA table
summary(anova_result)
anova_result
# Perform the two-way ANOVA
anova_result <- anova(MonthsHealthy ~ Fertilizer * Crop, data = data)
# Perform the two-way ANOVA
anova_result <- aov(MonthsHealthy ~ factor(Fertilizer) * factor(Crop), data = data)
anova_result
summary(anova_result)
# Load necessary package for Latin Square analysis
if (!requireNamespace("agricolae", quietly = TRUE)) {
install.packages("agricolae")
}
library(agricolae)
# Create data frame based on the problem's data
data <- data.frame(
Tillage = rep(c("till1", "till2", "till3", "till4", "till5"), each = 5),
Fertilizer = rep(c("fertilizer1", "fertilizer2", "fertilizer3", "fertilizer4", "fertilizer5"), times = 5),
Seed = c("A", "C", "B", "D", "E",
"E", "B", "C", "A", "D",
"C", "A", "D", "E", "B",
"B", "D", "E", "C", "A",
"D", "E", "A", "B", "C"),
Productivity = c(42, 47, 55, 51, 44,
45, 54, 52, 44, 50,
41, 46, 57, 47, 48,
56, 52, 49, 50, 43,
47, 49, 45, 54, 46)
)
# Check the structure of the data
print(data)
# Perform ANOVA for Latin Square Design
latin_square_model <- aov(Productivity ~ Seed + Fertilizer + Tillage, data = data)
# Display the ANOVA table
summary(latin_square_model)
# Create the data frame based on the provided data
data <- data.frame(
Restaurant = rep(c("R1", "R2", "R3", "R4", "R5", "R6"), each = 3),
Item = rep(c("Item1", "Item2", "Item3"), times = 6),
Sales = c(31, 27, 24,
31, 28, 31,
45, 29, 46,
21, 18, 48,
42, 36, 46,
32, 17, 40)
)
# Check the structure of the data
print(data)
# Perform the ANOVA for Randomized Block Design
rbd_model <- aov(Sales ~ Item + Restaurant, data = data)
# Display the ANOVA table
summary(rbd_model)
# Perform the two-way ANOVA
anova_result <- aov(MonthsHealthy ~ factor(Fertilizer) + factor(Crop), data = data)
# Perform the two-way ANOVA
anova_result <- aov(MonthsHealthy ~ factor(Fertilizer), data = data)
summary(anova_result)
# Perform the two-way ANOVA
anova_result <- aov(MonthsHealthy ~ Fertilizer, data = data)
summary(anova_result)
if (!requireNamespace("dplyr", quietly = TRUE)) {
install.packages("dplyr")
}
library(dplyr)
# Create the data frame with the given data
data <- data.frame(
Fertilizer = rep(c("F1", "F2", "F3"), each = 3),
Crop = rep(c("Corn", "Rice", "Wheat"), times = 3),
MonthsHealthy = c(6, 4, 6, 5, 4.2, 5, 6, 5, 5.5)
)
# Check the structure of the data
print(data)
# Perform the two-way ANOVA
anova_result <- aov(MonthsHealthy ~ Fertilizer, data = data)
summary(anova_result)
