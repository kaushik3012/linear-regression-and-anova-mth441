cat("Percentage change from Q3 to Q4:", percentage_change, "%\n")
# Extract the coefficients
beta_estimate <- coef(reg)["time"]
alpha3 <- coef(reg)["Q3"]
alpha4 <- coef(reg)["Q4"]
# Calculate the percentage change from Q3 to Q4
percentage_change <- (alpha4 - alpha3)
# Output the results
cat("Estimated average annual increase in logged earnings per share:", beta_estimate, "\n")
cat("Percentage change from Q3 to Q4:", percentage_change*100, "%\n")
# Extract the coefficients
beta_estimate <- coef(reg)
alpha3 <- coef(reg)["Q3"]
alpha4 <- coef(reg)["Q4"]
# Calculate the percentage change from Q3 to Q4
percentage_change <- (alpha4 - alpha3)
# Output the results
cat("Estimated average annual increase in logged earnings per share:", beta_estimate, "\n")
cat("Percentage change from Q3 to Q4:", percentage_change*100, "%\n")
# Extract the coefficients
beta_estimate <- coef(reg[1])
alpha3 <- coef(reg)["Q3"]
alpha4 <- coef(reg)["Q4"]
# Calculate the percentage change from Q3 to Q4
percentage_change <- (alpha4 - alpha3)
# Output the results
cat("Estimated average annual increase in logged earnings per share:", beta_estimate, "\n")
cat("Percentage change from Q3 to Q4:", percentage_change*100, "%\n")
# Extract the coefficients
beta_estimate <- coef(reg)[1]
alpha3 <- coef(reg)["Q3"]
alpha4 <- coef(reg)["Q4"]
# Calculate the percentage change from Q3 to Q4
percentage_change <- (alpha4 - alpha3)
# Output the results
cat("Estimated average annual increase in logged earnings per share:", beta_estimate, "\n")
cat("Percentage change from Q3 to Q4:", percentage_change*100, "%\n")
knitr::opts_chunk$set(echo = TRUE)
tinytex::install_tinytex()
library(astsa)
trend = time(jj) - 1970 # helps to ‘center’ time
Q = factor(rep(1:4,21)) # make (Q)uarter factors
reg = lm(log(jj)~0 + trend + Q, na.action=NULL) # without intercept
# Extract the coefficients
beta_estimate <- coef(reg)[1]
alpha3 <- coef(reg)["Q3"]
alpha4 <- coef(reg)["Q4"]
# Calculate the percentage change from Q3 to Q4
percentage_change <- (alpha4 - alpha3)
# Output the results
cat("Estimated average annual increase in logged earnings per share:", beta_estimate, "\n")
cat("Percentage change from Q3 to Q4:", percentage_change*100, "%\n")
plot(log(jj), type="o")
lines(fitted(reg), col=2)
plot.ts(resid(reg))
acf(resid(reg), 20)
knitr::opts_chunk$set(echo = TRUE)
library(astsa)
trend = time(jj) - 1970 # helps to ‘center’ time
Q = factor(rep(1:4,21)) # make (Q)uarter factors
reg = lm(log(jj)~0 + trend + Q, na.action=NULL) # without intercept
# Extract the coefficients
beta_estimate <- coef(reg)[1]
alpha3 <- coef(reg)["Q3"]
alpha4 <- coef(reg)["Q4"]
# Calculate the percentage change from Q3 to Q4
percentage_change <- (alpha4 - alpha3)
# Output the results
cat("Estimated average annual increase in logged earnings per share:", beta_estimate, "\n")
cat("Percentage change from Q3 to Q4:", percentage_change*100, "%\n")
plot(log(jj), type="o")
lines(fitted(reg), col=2)
plot.ts(resid(reg))
acf(resid(reg), 20)
knitr::opts_chunk$set(echo = TRUE)
library(astsa)
trend = time(jj) - 1970 # helps to ‘center’ time
Q = factor(rep(1:4,21)) # make (Q)uarter factors
reg = lm(log(jj)~0 + trend + Q, na.action=NULL) # without intercept
# Extract the coefficients
beta_estimate <- coef(reg)[1]
alpha3 <- coef(reg)["Q3"]
alpha4 <- coef(reg)["Q4"]
# Calculate the percentage change from Q3 to Q4
percentage_change <- (alpha4 - alpha3)
# Output the results
cat("Estimated average annual increase in logged earnings per share:", beta_estimate, "\n")
cat("Percentage change from Q3 to Q4:", percentage_change*100, "%\n")
plot(log(jj), type="o")
lines(fitted(reg), col=2)
plot.ts(resid(reg))
acf(resid(reg), 20)
knitr::opts_chunk$set(echo = TRUE)
library(astsa)
trend = time(jj) - 1970 # helps to ‘center’ time
Q = factor(rep(1:4,21)) # make (Q)uarter factors
reg = lm(log(jj)~0 + trend + Q, na.action=NULL) # without intercept
# Extract the coefficients
beta_estimate <- coef(reg)[1]
alpha3 <- coef(reg)["Q3"]
alpha4 <- coef(reg)["Q4"]
# Calculate the percentage change from Q3 to Q4
percentage_change <- (alpha4 - alpha3)
# Output the results
cat("Estimated average annual increase in logged earnings per share:", beta_estimate, "\n")
cat("Percentage change from Q3 to Q4:", percentage_change*100, "%\n")
plot(log(jj), type="o")
lines(fitted(reg), col=2)
plot.ts(resid(reg))
acf(resid(reg), 20)
library(readxl)
library(car)
library(dplyr)
###############
#Question 1
###############
TimeDeliveryData <- read_excel("~/Desktop/MTH441/Labs/Lab 6/TimeDeliveryData.xlsx")
setwd("/Users/kaushikrajnadar/Library/CloudStorage/OneDrive-IITKanpur/Documents/SEM9 - IITK/MTH441/Lab 6")
library(car)
library(readxl)
TimeDeliveryData <- read_excel("TimeDeliveryData.xlsx")
TimeDeliveryData <- read_excel("TimeDeliveryData.xlsx")
Acetylene_Data <- read_excel("Acetylene_Data.xlsx")
Y <- TimeDeliveryData$Y
X1 <- TimeDeliveryData$X1
X2 <- TimeDeliveryData$X2
model <- lm(Y ~ X1 + X2, data = data)
leverage_points <- hatvalues(model)
leverage_points
cooks_d <- cooks.distance(model)
cooks_d
dfbetas_values <- dfbetas(model)
dfbetas_values
dffits_values <- dffits(model)
dffits_values
covratio_values <- covratio(model)
covratio_values
influence_measures <- influence.measures(model)
summary(influence_measures)
TimeDeliveryData <- read_excel("TimeDeliveryData.xlsx") %>% as.data.frame()
Acetylene_Data <- read_excel("Acetylene_Data.xlsx") %>% as.data.frame()
Y <- TimeDeliveryData$Y
X1 <- TimeDeliveryData$X1
X2 <- TimeDeliveryData$X2
model <- lm(Y ~ X1 + X2, data = data)
model <- lm(Y ~ X1 + X2, data = TimeDeliveryData)
leverage_points <- hatvalues(model)
leverage_points
cooks_d <- cooks.distance(model)
cooks_d
dfbetas_values <- dfbetas(model)
dfbetas_values
dffits_values <- dffits(model)
dffits_values
covratio_values <- covratio(model)
covratio_values
influence_measures <- influence.measures(model)
summary(influence_measures)
#P2
library(car)
library(dplyr)
normalize <- function(x) {
(x - mean(x)) / sqrt((length(x) - 1) * var(x))
}
# Normalize the dataset
acetylene_norm <- as.data.frame(lapply(Acetylene_Data, normalize))
# Create interaction and second-order terms
acetylene_full <- cbind(acetylene_norm,
X1X2 = acetylene_norm$X1 * acetylene_norm$X2,
X1X3 = acetylene_norm$X1 * acetylene_norm$X3,
X2X3 = acetylene_norm$X2 * acetylene_norm$X3,
X1_sq = acetylene_norm$X1^2,
X2_sq = acetylene_norm$X2^2,
X3_sq = acetylene_norm$X3^2)
# Calculate correlation matrix
cor_matrix <- cor(acetylene_full)
# Print correlation matrix
print("Correlation Matrix:")
print(cor_matrix)
# Calculate VIF
model <- lm(Y ~ ., data = acetylene_full)
vif_values <- vif(model)
# Print VIF values
print("VIF Values:")
print(vif_values)
library(readxl)
library(car)
library(dplyr)
###############
#Question 1
###############
TimeDeliveryData <- read_excel("~/Desktop/MTH441/Labs/Lab 6/TimeDeliveryData.xlsx")
library(readxl)
library(car)
library(dplyr)
###############
#Question 1
###############
TimeDeliveryData <- read_excel("TimeDeliveryData.xlsx")
setwd("/Users/kaushikrajnadar/Library/CloudStorage/OneDrive-IITKanpur/Documents/SEM9 - IITK/MTH441/Lab 6")
library(readxl)
library(car)
library(dplyr)
###############
#Question 1
###############
TimeDeliveryData <- read_excel("TimeDeliveryData.xlsx")
#############
#leverage points
X <- as.matrix(cbind(1, TimeDeliveryData))
H <- X %*% solve(t(X) %*% X) %*% t(X)
leverage <- diag(H)
#############
#cook's distance
model = lm(Y~X1+X2, TimeDeliveryData)
cd <- cooks.distance(model)
###########
#DFBETAS
dfb <- dfbetas(model)
#############
#DFFITS
dff <- dffits(model)
##############
#COVRATIO
covr <- covratio(model)
#################
#Question 2
#################
Acetylene_Data <- read_excel("~/Desktop/MTH441/Labs/Lab 6/Acetylene_Data.xlsx")
mean_values <- colMeans(Acetylene_Data)
std_dev_values <- apply(Acetylene_Data, 2, sd)
Acetylene_Data_standardized <- sweep(Acetylene_Data, 2, mean_values, FUN = "-")
Acetylene_Data_standardized <- sweep(Acetylene_Data_standardized, 2, std_dev_values, FUN = "/")
squared_terms <- Acetylene_Data_standardized^2
colnames(squared_terms) <- paste0(colnames(Acetylene_Data_standardized), "^2")
interaction_terms <- data.frame(model.matrix(~.^2 - 1, data = Acetylene_Data_standardized))
Acetylene_Data_standardized <- cbind(Acetylene_Data_standardized, squared_terms, interaction_terms)
correlation_matrix <- cor(Acetylene_Data_standardized, use = "complete.obs")
print(correlation_matrix)
duplicated_columns <- which(duplicated(colnames(Acetylene_Data_standardized)))
colnames(Acetylene_Data_standardized)[duplicated_columns] <- paste0(colnames(Acetylene_Data_standardized)[duplicated_columns], "_dup")
Acetylene_Data_standardized <- Acetylene_Data_standardized[, !duplicated(colnames(Acetylene_Data_standardized))]
model <- lm(Y ~ ., data = Acetylene_Data_standardized)
model_step <- step(model)
summary(model_step)
vif_values <- vif(model_step)
print(vif_values)
model <- lm(Y ~ ., data = Acetylene_Data_standardized)
model_step <- step(model)
summary(model_step)
vif_values <- vif(model_step)
print(vif_values)
############################################
# Question 1                              #
###########################################
library(car)
library(readxl)
TimeDeliveryData <- read_excel("TimeDeliveryData.xlsx") %>% as.data.frame()
model <- lm(Y ~ X1 + X2, data = TimeDeliveryData)
leverage_points <- hatvalues(model)
leverage_points
cooks_d <- cooks.distance(model)
cooks_d
dfbetas_values <- dfbetas(model)
dfbetas_values
dffits_values <- dffits(model)
dffits_values
covratio_values <- covratio(model)
covratio_values
influence_measures <- influence.measures(model)
summary(influence_measures)
############################################
# Question 2                              #
###########################################
library(car)
library(dplyr)
library(readxl)
Acetylene_Data <- read_excel("Acetylene_Data.xlsx") %>% as.data.frame()
# Normalize the dataset
acetylene_norm <- as.data.frame(lapply(Acetylene_Data, function(x) ((x - mean(x)) / sqrt((length(x) - 1) * var(x)))))
# Create interaction and second-order terms
acetylene_full <- cbind(acetylene_norm,
X1X2 = acetylene_norm$X1 * acetylene_norm$X2,
X1X3 = acetylene_norm$X1 * acetylene_norm$X3,
X2X3 = acetylene_norm$X2 * acetylene_norm$X3,
X1_sq = acetylene_norm$X1^2,
X2_sq = acetylene_norm$X2^2,
X3_sq = acetylene_norm$X3^2)
# Calculate correlation matrix
cor_matrix <- cor(acetylene_full)
# Print correlation matrix
print("Correlation Matrix:")
print(cor_matrix)
# Calculate VIF
model <- lm(Y ~ ., data = acetylene_full)
vif_values <- vif(model)
# Print VIF values
cat("VIF Values: ", vif_values)
clear
clear()
?clear
??clear
############################################
# Question 1                              #
###########################################
library(car)
library(readxl)
TimeDeliveryData <- read_excel("TimeDeliveryData.xlsx") %>% as.data.frame()
model <- lm(Y ~ X1 + X2, data = TimeDeliveryData)
leverage_points <- hatvalues(model)
leverage_points
cooks_d <- cooks.distance(model)
cooks_d
dfbetas_values <- dfbetas(model)
dfbetas_values
dffits_values <- dffits(model)
dffits_values
covratio_values <- covratio(model)
covratio_values
influence_measures <- influence.measures(model)
summary(influence_measures)
############################################
# Question 2                              #
###########################################
library(car)
library(dplyr)
library(readxl)
Acetylene_Data <- read_excel("Acetylene_Data.xlsx") %>% as.data.frame()
# Normalize the dataset
acetylene_norm <- as.data.frame(lapply(Acetylene_Data, function(x) ((x - mean(x)) / sqrt((length(x) - 1) * var(x)))))
# Create interaction and second-order terms
acetylene_full <- cbind(acetylene_norm,
X1X2 = acetylene_norm$X1 * acetylene_norm$X2,
X1X3 = acetylene_norm$X1 * acetylene_norm$X3,
X2X3 = acetylene_norm$X2 * acetylene_norm$X3,
X1_sq = acetylene_norm$X1^2,
X2_sq = acetylene_norm$X2^2,
X3_sq = acetylene_norm$X3^2)
# Calculate correlation matrix
cor_matrix <- cor(acetylene_full)
# Print correlation matrix
print("Correlation Matrix:")
print(cor_matrix)
# Calculate VIF
model <- lm(Y ~ ., data = acetylene_full)
vif_values <- vif(model)
# Print VIF values
cat("VIF Values: ", vif_values)
# Print correlation matrix
cat("Correlation Matrix: \n", cor_matrix)
cor_matrix
# Print correlation matrix
cat("Correlation Matrix: ")
cor_matrix
covratio_values
cat(covratio_values)
summary(influence_measures)
influence_measures <- influence.measures(model)
summary(influence_measures)
TimeDeliveryData <- read_excel("TimeDeliveryData.xlsx") %>% as.data.frame()
model <- lm(Y ~ X1 + X2, data = TimeDeliveryData)
leverage_points <- hatvalues(model)
cooks_d <- cooks.distance(model)
dfbetas_values <- dfbetas(model)
dffits_values <- dffits(model)
covratio_values <- covratio(model)
# Print the Results
leverage_points
cooks_d
dfbetas_values
dffits_values
covratio_values
influence_measures <- influence.measures(model)
summary(influence_measures)
library(car)
library(readxl)
TimeDeliveryData <- read_excel("TimeDeliveryData.xlsx") %>% as.data.frame()
model <- lm(Y ~ X1 + X2, data = TimeDeliveryData)
leverage_points <- hatvalues(model)
cooks_d <- cooks.distance(model)
dfbetas_values <- dfbetas(model)
dffits_values <- dffits(model)
covratio_values <- covratio(model)
# Print the Results
leverage_points
cooks_d
dfbetas_values
dffits_values
covratio_values
influence_measures <- influence.measures(model)
summary(influence_measures)
library(car)
library(readxl)
TimeDeliveryData <- read_excel("TimeDeliveryData.xlsx") %>% as.data.frame()
model <- lm(Y ~ X1 + X2, data = TimeDeliveryData)
leverage_points <- hatvalues(model)
cooks_d <- cooks.distance(model)
dfbetas_values <- dfbetas(model)
dffits_values <- dffits(model)
covratio_values <- covratio(model)
# Print the Results
leverage_points
cooks_d
dfbetas_values
dffits_values
covratio_values
influence_measures <- influence.measures(model)
summary(influence_measures)
library(car)
library(dplyr)
library(readxl)
Acetylene_Data <- read_excel("Acetylene_Data.xlsx") %>% as.data.frame()
# Normalize the dataset
acetylene_norm <- lapply(Acetylene_Data, function(x) ((x - mean(x)) / sqrt((length(x) - 1) * var(x)))) %>% as.data.frame()
# Create interaction and second-order terms
acetylene_final <- cbind(acetylene_norm,
X1X2 = acetylene_norm$X1 * acetylene_norm$X2,
X1X3 = acetylene_norm$X1 * acetylene_norm$X3,
X2X3 = acetylene_norm$X2 * acetylene_norm$X3,
X1_sq = acetylene_norm$X1^2,
X2_sq = acetylene_norm$X2^2,
X3_sq = acetylene_norm$X3^2)
# Calculate correlation matrix
corr <- cor(acetylene_final)
# Print correlation matrix
cat("Correlation Matrix: ")
corr
# Calculate VIF
model <- lm(Y ~ ., data = acetylene_final)
vif_values <- vif(model)
# Print VIF values
cat("VIF Values: ", vif_values)
acetylene_norm
acetylene_final
library(car)
library(dplyr)
library(readxl)
Acetylene_Data <- read_excel("Acetylene_Data.xlsx") %>% as.data.frame()
# Normalize the dataset
acetylene_norm <- lapply(Acetylene_Data, function(x) ((x - mean(x)) / sqrt((length(x) - 1) * var(x)))) %>% as.data.frame()
acetylene_norm
# Create interaction and second-order terms
acetylene_final <- cbind(acetylene_norm,
X1X2 = acetylene_norm$X1 * acetylene_norm$X2,
X1X3 = acetylene_norm$X1 * acetylene_norm$X3,
X2X3 = acetylene_norm$X2 * acetylene_norm$X3,
X1_sq = acetylene_norm$X1^2,
X2_sq = acetylene_norm$X2^2,
X3_sq = acetylene_norm$X3^2)
acetylene_final
# Calculate correlation matrix
corr <- cor(acetylene_final)
# Print correlation matrix
cat("Correlation Matrix: ")
corr
# Calculate VIF
model <- lm(Y ~ ., data = acetylene_final)
vif_values <- vif(model)
# Print VIF values
cat("VIF Values: ", vif_values)
library(car)
library(dplyr)
library(readxl)
Acetylene_Data <- read_excel("Acetylene_Data.xlsx") %>% as.data.frame()
# Normalize the dataset
acetylene_norm <- lapply(Acetylene_Data, function(x) ((x - mean(x)) / sqrt((length(x) - 1) * var(x)))) %>% as.data.frame()
acetylene_norm
# Create interaction and second-order terms
acetylene_final <- cbind(acetylene_norm,
X1X2 = acetylene_norm$X1 * acetylene_norm$X2,
X1X3 = acetylene_norm$X1 * acetylene_norm$X3,
X2X3 = acetylene_norm$X2 * acetylene_norm$X3,
X1_sq = acetylene_norm$X1^2,
X2_sq = acetylene_norm$X2^2,
X3_sq = acetylene_norm$X3^2)
acetylene_final
# Calculate correlation matrix
corr <- cor(acetylene_final)
# Print correlation matrix
cat("Correlation Matrix: ")
corr
# Calculate VIF
model <- lm(Y ~ ., data = acetylene_final)
vif_values <- vif(model)
# Print VIF values
cat("VIF Values: ", vif_values)
library(car)
library(dplyr)
library(readxl)
Acetylene_Data <- read_excel("Acetylene_Data.xlsx") %>% as.data.frame()
# Normalize the dataset
acetylene_norm <- lapply(Acetylene_Data, function(x) ((x - mean(x)) / sqrt((length(x) - 1) * var(x)))) %>% as.data.frame()
acetylene_norm
# Create interaction and second-order terms
acetylene_final <- cbind(acetylene_norm,
X1X2 = acetylene_norm$X1 * acetylene_norm$X2,
X1X3 = acetylene_norm$X1 * acetylene_norm$X3,
X2X3 = acetylene_norm$X2 * acetylene_norm$X3,
X1_sq = acetylene_norm$X1^2,
X2_sq = acetylene_norm$X2^2,
X3_sq = acetylene_norm$X3^2)
acetylene_final
# Calculate correlation matrix
corr <- cor(acetylene_final)
# Print correlation matrix
cat("Correlation Matrix: ")
corr
# Calculate VIF
model <- lm(Y ~ ., data = acetylene_final)
vif_values <- vif(model)
# Print VIF values
cat("VIF Values: ", vif_values)
